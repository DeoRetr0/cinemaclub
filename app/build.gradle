apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "tech.kaomidev.cinemaclub"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    androidExtensions {
        experimental = true
    }
    buildTypes {

        debug {
            buildConfigField 'String', "TmdbApiToken", getLocalProperties().getProperty('tmdb_api_token')
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', "TmdbApiToken",  getLocalProperties().getProperty('tmdb_api_token')
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar']) // room_version

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.google.android.material:material:$material_version"

    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.paging:paging-runtime:$paging_version"

    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    implementation "com.github.bumptech.glide:glide:$glide_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"

    kapt "androidx.room:room-compiler:$room_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "androidx.test:runner:$testrunner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
}

def getLocalProperties() {
    Properties properties = new Properties()

    if (project.rootProject.file('local.properties').exists()) {
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
    } else {
        logger.warn('Missing local.properties file. You should define your TMDB API Key there!')
    }

    return properties
}